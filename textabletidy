#!/usr/bin/env python

import sys
import re

rawlines  = []
rows      = []
postlines = []

# An unescaped ampersand is one that is not immediately preceded by backslash
unescamp = re.compile(r'(?<!\\)&')
newline  = re.compile(r'\\\\')

# A line of text is a table row if it contains at least one unescaped
# ampersand and the newline command '\\'. It does not have to end with the
# newline command, because there may be for example '\hline' following that on
# the same line of text. We could count the number of ampersands and make sure
# it matches the table heading, but that's complicated. Instead just pack the
# table cells starting from the newline and going backwards.

# Handle unusual cases by just using 'try'; if something breaks then don't
# change that line

istablerow = lambda line: unescamp.search(line) and newline.search(line)

for line in sys.stdin:
	rawlines.append(line)
	if istablerow(line):
		preline,postline = newline.split(line)
		cells = [c.strip() for c in unescamp.split(preline)]
		rows.append(cells)
		postlines.append(postline.strip())

col_width = [max(len(x) for x in col) for col in zip(*rows)]

rows = [[c + ' '*(w-len(c)) for c,w in zip(row,col_width)] for row in rows]

for line in rawlines:
	if istablerow(line):
		row = rows.pop(0)
		postline = postlines.pop(0)
		print ' & '.join(row) + r' \\ ' + postline
	else:
		print line
